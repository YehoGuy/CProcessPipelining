dup(<file_descriptor>):

    The dup() system call duplicates an existing file descriptor.
    Input: It takes a file descriptor (e.g., pipe_fd[1]).
    Output: It returns a new file descriptor that is a copy of the original.
    Both the original and duplicated file descriptors point to the same underlying file/resource 
    *The duplicated file descriptor is assigned the lowest unused file descriptor in the process.
    The new file descriptor can now be used interchangeably with the original.

    What Does "Lowest Available File Descriptor" Mean?
    Every process has a table of file descriptors:

    File descriptors 0, 1, and 2 are typically reserved for:
    0: stdin
    1: stdout
    2: **stderr`
    When the process starts, these descriptors are usually occupied. If you call dup() and 1 (stdout) is currently available (i.e., unoccupied or redirected), the new file descriptor returned by dup() will reuse it.

    we closed stdout so we de-occupied its file descriptor.

    * its process has its own file-descriptor table.